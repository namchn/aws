plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.16-SNAPSHOT' 
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	
	id 'jvm-test-suite' //gradle 9버전 
}

group = 'com.example'
version = '1.0.1-SNAPSHOT'

java {
	sourceCompatibility = '1.8'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'  
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// 공백 체크 및 각종 체크를 도와주는 어노테이션을 사용할 수 있게 해주는 Dependency
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'  //메모리에 디비생성
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// https://mvnrepository.com/artifact/com.google.guava/guava
	implementation group: 'com.google.guava', name: 'guava', version: '32.1.1-jre'
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'  //토큰 
	implementation 'org.springframework.boot:spring-boot-starter-security'
	//runtimeOnly 'mysql:mysql-connector-java'
	runtimeOnly 'com.mysql:mysql-connector-j'
	
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-oauth2-client
	implementation group: 'org.springframework.security', name: 'spring-security-oauth2-client', version: '5.6.1'

	
	//excel
	implementation group: 'org.apache.poi', name: 'poi', version: '5.0.0'
	implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.0.0'

	// https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
	
	// 개발 단계에서는 편리하게 사용하되, 운영 시스템에 적용하기 위해서는 성능 테스트를 하고 사용하자.
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.7'
    
    //mybatis 
	// https://mvnrepository.com/artifact/org.mybatis.spring.boot/mybatis-spring-boot-starter
	// mybatis와 관련된 dependency (jdbc, mybatis)
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'

	//캐싱 기능 사용
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	
	// redis 사용
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	
	//aop
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	// https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310
	// implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.16.0-rc1'
	//자바 역직렬화 문제 해결 패키지
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	
}

tasks.named('test') {
	//useJUnitPlatform()
}

task('release') {
	/* ./gradlew build를 먼저 실행하라는 뜻이다. */
	dependsOn("build")

	doLast {
		def stdout = new ByteArrayOutputStream()
		/* exec - 커맨드 라인 프로세서; 파워셸/터미널에서 실행하는 것과 같다. */
		exec {
			/* $eb setenv SPRING_PROFILES_ACTIVE=prod */
			commandLine 'eb', 'setenv', 'SPRING_PROFILES_ACTIVE=prod'
			standardOutput = stdout
		}
		/* 결과 로깅을 위한 작업 */
		println "eb setenv SPRING_PROFILES_ACTIVE=prod :\n$stdout";
		exec {
			/* $eb deploy */
			commandLine 'eb', 'deploy'
			standardOutput = stdout
		}
		println "eb deploy :\n$stdout";
		println "Release succeeded."
	}
}

task('b1') {
	/* ./gradlew build를 먼저 실행하라는 뜻이다. */
	dependsOn("build")

	doLast {
		
		println "b1 succeeded."
	}
}